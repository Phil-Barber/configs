#source <(kubectl completion bash) # Enable auto completion

alias k=kubectl
alias n=namespace

export KOPS_STATE_STORE=s3://lantum-kops
export NAME=k.lantum.com

export KUBE_EDITOR='vim'

__kube_ps1() {
 CONTEXT=$(cat ~/.kube/config | grep 'namespace:' | cut -d':' -f2 | tr -d '[:space:]')
 echo "[$CONTEXT]"
}
# export PS1="\$(__kube_ps1) ${PS1}"

function logs {
    service=$1
    shift
    kubectl logs --tail=100 -f "deployment/$service" $@
}
function kbash {
    service=$(k get pods | grep $1 | grep Running | head -1 | cut -d ' ' -f1)
    echo "Executing bash on $service"
    shift
    kubectl exec "$service" -it bash $@
}
function describe {
    service=$(k get pods | grep $1 | head -1 | cut -d ' ' -f1)
    echo "Executing describe on $service"
    k describe pod "$service"
}
function namespace {
    echo "Setting namespace $1"
    kubectl config set-context $(kubectl config current-context) --namespace=$1
}
build-docker-hub () {
  project=$1;
  cd $project;
  version=`git log -1 --pretty=oneline | cut -d' ' -f1`;
  docker build -t networklocum/$project:$version .;
  docker push networklocum/$project:$version;
  cd ..;
}
function kwatch {
    k get pods --watch | grep $1
}

function kimage {
    for service in $*
    do
        k describe deploy $service | grep Image | sed "1q;d"
    done
}

function forward {
    port=$2
    service=$(k get pods | grep $1 | head -1 | cut -d ' ' -f1)
    echo "Forwarding pod $service on port $port"
    kubectl port-forward "$service" $port
}
